General:
  - Overall UI improvements
  - Lightweight app for fast reload
  - Remove redundant code to make it lightweight
  - nomenclature of things (Supabase table, etc should be properly renamed)
  - decide on themes
  - Include Sentry

Actual Implementation:
  - actual user data - work on email and first name fetching. 

App Improvement Suggestions
    - Add user onboarding with tooltips to guide new users through key features.
    - Implement dark mode and theme customization for better accessibility.
    - Add keyboard shortcuts for common actions (e.g., select all, clear selection, create entry).
    - Enable bulk editing of table entries for faster data management.
    - Add advanced filtering and search (e.g., by tag, by date, by status).
    - Provide export options for table data (CSV, Excel, PDF).
    - Integrate real-time notifications for queue status, errors, and completed actions.
    - Add audit logs/history for changes made to entries for better traceability.
    - Allow users to save and reuse email templates with versioning.
    - Implement role-based access control for multi-user environments.
    - Add analytics dashboard to visualize email campaign performance and queue stats.
    - Support multi-language/localization for broader accessibility.
    - Enable drag-and-drop reordering of table rows for custom prioritization.
    - Add in-app feedback and support chat for quick help.
    - Optimize mobile responsiveness for use on tablets and phones.

Upload file: Include google sheets integration

Supabase Table
    - fix: updated entry goes to the bottom - maintain relative order - in a particular case it went to the top. 
    - fix: copy button copies a JSON format, not a table format of Excel (tab separated - look up)
    - feat: fetch button backend 
    - feat: undo delete/recycle bin/backup
    - feat: keep the actions column fixed like a sticky column for ease of access, although we can convert them into icons and put them in fron near select column
    - feat: remove duplicates (either here or the upload file component)
    - fix: email_sent count should not be included in edit modal
    - fix: email sent count? use and connect with the script : discard
    - Error: Using custom pagination of say 1, when we jump back to a larger number say 10, the values are refetched and not shown until reloaded. - this error is inconsistent


Outbound component:
  - responsiveness
  - search and group based on tag, group by multiple tags
  - should display
  - feat: Include live date and time with the accuracy of seconds in the PST - IST converter
  - figure out the scheduling logic and clear the UX of email queue status and scheduling status
  - avoid scheduling in past/ the logic is fine but the UX should be changed
  - draft feature
  - bulk option - Agentic Call - populates the google sheet with data (name, email and phone number) the agent can then pick it up to perform outbound call. 
    - If we make this an additional component we can configure the data populated in the sheet to provide more context for the call. We can launch specifically targetted call campagins: exampe a targeted call campagin for a specifc audience of DEO members 

Newsletter Component: 
  - design plan and schedule newsletter campagin
  - very similar to templates component but with specific tool. and tuned ai generation prompts. 


Templates and ID:
  - make the flow more robust
  - 

  - UI/UX improvements
  - text editor for emails
  - support for custom html email template design
  - AI template generator
  - pre-existing library with ready to use email templates
  - Template management - folders [affects Outbound component]
  - template health ratings and improvement Suggestions - spam avoidance check
  - Preview - detailed preview like the ones in google ads - Multiple devices like phone, tablet and desktop

  - ID management:
    - Limit email sent per day per email ID - first diplay and keep count, make it dynamic and refreshable daily (not manually), set custom limits, not exceeding max permisable count. 
    - email id health management 
    - check for email health parameters all we can use
    - Make this a separate component
    - sign up user emails IDs, to plug in and use for Outbound
    - globally block an email ID after it reaches it's limit - block lasting for 24 hours - during block only scheduling should be available for times greater than 24 hours
    - 


Audience:
  - folders based on tag
  - tag management

Agentic Call Outbound:

add a tag array to each entry to create a targeted sub-group of audience 

Research:
  - a research component loaded with dental practice data and behaviour and open rate analytics
  - to figure out best time, hooks and language improvements for the email. 


===================
  Note this new schema for my supabase table:

  New Schema:

  create table public.practices (

  id bigint generated by default as identity not null,

  practice_name text not null,

  domain_url text null,

  owner_name text null,

  email text null,

  phone_number text null,

  first_name text null,

  email_sent_count bigint null default '0'::bigint,

  tags jsonb[] null,

  constraint practices_pkey primary key (id)

  ) TABLESPACE pg_default;

  

  Now, In the json file add the following tasks

  Create a New component in the side nav bar by the name Audience 
  Audience feat: Display supabase table (which columns?) - select feature included
  Audience feat: above table add a menu opens on selecting entries. Add a button to create new tags and add them to tags jsonb[]. Each entry can have multiple tags in the tags column. 
  Audience feat: above the table and the hidden select menu should visually depict already created tags (could use json file for this make sure tags are unique) clicking on each tag should apply the search filters and in the below table only those entries are shown. A combination of logical operations should be done here like tag1 and tag2 entries only. Tag1 or Tag2 entries only, tag1-tag2 entries like that make unique search filters( this can be done in later version) for v1 only use the OR operation like list out all the entries that have the selected tags. 
  Audience and Outbound components: Search filtering based on tags to be implemented in Outbound component not messing up with existing functionality

  Supabase table componentfix: updated entry goes to the bottom - maintain relative order - in a particular case it went to the top.
  Supabase table componentfix: copy button copies a JSON format, not a table format of Excel (tab separated - look up)
  Supabase table component fix: email_sent count should not be included in edit modal

  Outbound component feat: Include live date and time with the accuracy of seconds in the PST - IST converter
  Outbound component fix: avoid scheduling in past/ the logic is fine but the UX should be changed

  Templates and ID: feat/text editor for emails
  Templates and ID: feat/make a proper usable ui that enlist the templates in templates.json and a proper text editor for emails. 

  Agentic Call [beta[
  display table 
  tag filter searching
  select in bulk and populate the google sheet 
  add context windows - each tag can have a context text with it not necessarily stored in supabase but stored in json while initially creating it in Audience (crud feats) context will show the call agent what to do with the user this will be sent to the google sheet and agent can pick it up. 


Slack integration