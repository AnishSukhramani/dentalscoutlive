[
  {
    "id": 30,
    "title": "Add Live Dynamic Queue Processing Status Component",
    "description": "In outbound.jsx between the heading 'Outbound - Manage and send emails to your practice contacts' and the PST to IST converter, add a live dynamic queue processing status component with attractive UI. It should show: how many entries are already processed, how many emails are left in the emailQueue, how many we selected to process, and an estimated time of completion. When errors occur and queue is not processed fully, alert the user to process the queue to clear it before starting a new batch. The alert should not hinder user operations but should notify that the queue is not empty and not fresh.",
    "status": "completed"
  },
  {
    "id": 31,
    "title": "Implement Scheduling Functionality for Individual and Bulk Emails",
    "description": "In outbound.jsx, implement scheduling functionality for both individual and bulk scheduling of emails. Currently there are placeholder comments for these functions. The functionality should work from the Send Mode column's dropdown, Action column, and from the select menu that appears when entries are selected.",
    "status": "completed"
  },
  {
    "id": 32,
    "title": "Add Clear Selection Button to Supabase Table",
    "description": "In the supabase table component, add a 'Clear Selection' button next to 'Select All' and 'Select All on Page' in the select menu that appears when entries are selected. This button should uncheck all selected checkboxes across all pages and close the select menu.",
    "status": "completed"
  },
  {
    "id": 33,
    "title": "Add Create Entry Button to Supabase Table",
    "description": "In the supabase table, add a 'Create Entry' button near the search bar. This should be able to create a single entry with all the fields of the supabase table. The Domain URL column should not be blank.",
    "status": "completed"
  },
  {
    "id": 34,
    "title": "Add Table Column Reference to Templates and Email Processor",
    "description": "In Templates and IDs component and emailProcessor.js at the top enlist all the columns of the supabase table. This provides a reference for users to know what placeholders they can use in their email templates.",
    "status": "completed"
  },
  {
    "id": 35,
    "title": "Implement Placeholder Replacement in Email Templates",
    "description": "In Templates and IDs component when the create or edit components are being used I want to add a feature where you can use [column name] to indicate a placeholder to insert the corresponding column value of that entry. Example if my email body text says: 'Hello, [first name] ! How are you?' Then for each email sent using this template should remove the [first name] and replace it by the entry in the first name column of the entry to whom the email is being sent. This way we can send customized emails to a lot of people.",
    "status": "completed"
  },
  {
    "id": 36,
    "title": "Create Audience Component in Side Nav",
    "description": "Add a new 'Audience' component to the side navigation. Route should render an Audience page where users can view and manage practice contacts and tags.",
    "status": "completed"
  },
  {
    "id": 37,
    "title": "Audience: Table with Selectable Rows",
    "description": "In Audience, display a Supabase-backed table showing columns: email, practice_name (as 'Practice'), first_name, phone_number. Include a select checkbox at the start of each row (match Outbound component behavior).",
    "status": "completed"
  },
  {
    "id": 38,
    "title": "Audience: Bulk Actions Menu with Tagging",
    "description": "When one or more rows are selected, show a bulk actions menu above the table. Include a 'Create Tag' flow and the ability to add selected tag(s) to the tags jsonb[] column for each selected entry. Support multiple tags per entry.",
    "status": "completed"
  },
  {
    "id": 39,
    "title": "Audience: Tags Gallery + Click-to-Filter",
    "description": "Above the table, render a visual gallery of existing tags (unique list, persisted in JSON in the app for now). Clicking a tag applies a filter so the table only shows entries that include the selected tag(s). Support multi-select tags and clear filters.",
    "status": "completed"
  },
  {
    "id": 40,
    "title": "Implement Tag-based Search in Outbound (Non-breaking)",
    "description": "Add tag-based filtering to Outbound using the same tag model used by Audience. Ensure no regressions in current Outbound flows and preserve existing search and queue features.",
    "status": "completed"
  },
  {
    "id": 41,
    "title": "Supabase Table: Preserve Row Order After Edit",
    "description": "Fix issue where an updated entry sometimes jumps to the top or bottom. Maintain the table's relative sort order after edits, including server-refreshed data.",
    "status": "completed"
  },
  {
    "id": 42,
    "title": "Supabase Table: Copy as TSV for Excel",
    "description": "Change the copy button to output a tab-separated (TSV) table suitable for Excel/Sheets, not JSON. Preserve column headers and selected rows/columns.",
    "status": "completed"
  },
  {
    "id": 43,
    "title": "Supabase Table: Exclude email_sent_count from Edit Modal",
    "description": "Remove the email_sent_count field from the edit modal so it cannot be modified directly by users.",
    "status": "completed"
  },
  {
    "id": 44,
    "title": "Outbound: Live PST↔IST Clock with Seconds",
    "description": "Enhance the PST–IST converter to show live date/time with second-level accuracy for both time zones.",
    "status": "completed"
  },
  {
    "id": 45,
    "title": "Outbound: Improve Scheduling UX to Prevent Past Times",
    "description": "Refine scheduling UI to make it clear when a chosen time would be in the past and prevent submission without blocking flows. Keep existing validation logic; focus on clearer affordances and warnings.",
    "status": "completed"
  },
  {
    "id": 46,
    "title": "Templates & IDs: Add Rich Text Email Editor",
    "description": "Provide a full-featured editor (bold/italic/links/lists, HTML preview) for composing/editing email templates.",
    "status": "completed"
  },
  {
    "id": 47,
    "title": "Templates & IDs: Usable Templates UI",
    "description": "Build a UI that lists templates from templates.json, supports search/sort, and opens them in the new editor for create/edit/duplicate workflows.",
    "status": "completed"
  },
  {
    "id": 48,
    "title": "Agentic Call [beta]: Display Table",
    "description": "Create a table view for Agentic Call to list relevant entries (source aligned with Audience/Outbound data model).",
    "status": "completed"
  },
  {
    "id": 49,
    "title": "Agentic Call [beta]: Tag Filters",
    "description": "Add tag-based searching/filtering to Agentic Call, reusing the shared tags system.",
    "status": "completed"
  },
  {
    "id": 50,
    "title": "Agentic Call [beta]: Bulk Select → Google Sheet",
    "description": "Enable bulk selection and export of selected rows to a Google Sheet for the call agent workflow.",
    "status": "completed"
  },
  {
    "id": 51,
    "title": "Agentic Call [beta]: Tag Context Windows (CRUD in Audience)",
    "description": "Allow each tag to have a 'context' text stored in app JSON when created/edited in Audience. Show this context in Agentic Call to guide the agent, and include it when exporting to Google Sheet.",
    "status": "todo"
  },
  {
    "id": 52,
    "title": "Rename 'Templates & IDs' component to 'Templates'",
    "description": "In the side nav and routes, rename the existing 'Templates & IDs' component to 'Templates'. Ensure all imports, routes, links, and breadcrumbs reflect the new name. No functional changes to Templates are required in this task.",
    "status": "completed"
  },
  {
    "id": 53,
    "title": "Create new 'IDs' component and route",
    "description": "Add a new 'IDs' component to the side navigation and create a dedicated page/route. The component will manage sending identities (From email IDs) and related limits. Set up initial scaffolding with a basic table layout and placeholder panels for Dashboard, Limits, and History.",
    "status": "completed"
  },
  {
    "id": 54,
    "title": "IDs: Load and list all email IDs from user.json",
    "description": "In the 'IDs' component, read user.json and list every configured email ID (display: label, email address, provider if available). Include search/sort and basic actions column (view details). Do not mutate user.json in this task—read-only load for listing.",
    "status": "completed"
  },
  {
    "id": 55,
    "title": "Per-ID daily send counter (email_sent_count_today) with 24h reset",
    "description": "Introduce a dynamic per-email-ID counter tracking how many emails were sent today. Implement daily refresh logic (automatic reset every 24 hours based on last_reset_at or at local midnight). Persist fields needed for enforcement: emails_sent_today, last_reset_at, optional blocked_until. Keep storage minimal (e.g., app JSON or Supabase table), but do not expose these fields in any general edit modals.",
    "status": "completed"
  },
  {
    "id": 56,
    "title": "Enforce per-ID daily limit with 24h block (direct send only)",
    "description": "Add a configurable per-ID daily limit. When emails_sent_today exceeds the limit, set blocked_until = now + 24h and prevent DIRECT sends from that ID until the block expires. Scheduling rules: allow scheduling if the scheduled_at time is > 24h from now even while blocked. Draft flows must remain unaffected. Provide clear inline errors/tooltips in Outbound and any send entry points when a block prevents a direct send.",
    "status": "todo"
  },
  {
    "id": 57,
    "title": "IDs UI: manual limit setting and override/unblock switch (dev/testing)",
    "description": "On each ID's details panel, add controls to: (1) set/change the daily limit, (2) toggle an 'Override/Unblock' switch that immediately clears blocked_until and resets emails_sent_today for dev/testing. Gate these controls behind a 'Developer options' expander and annotate that behavior may change later.",
    "status": "todo"
  },
  {
    "id": 58,
    "title": "IDs Dashboard: visualize usage, limits, and blocks",
    "description": "Build a dashboard within the 'IDs' component showing for each ID: emails_sent_today, daily_limit, remaining sends, block status (Active/Until timestamp), next reset time, and a small sparkline/history of the past 7 days if available. Include a global banner when any ID is currently blocked and a quick link to that ID's details. Ensure data auto-refreshes on interval and after send events.",
    "status": "todo"
  }
]

